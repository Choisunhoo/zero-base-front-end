/* 고차함수 
  하나 이상의 함수를 매개변수로 취하거나 함수를 결과로 반환하는 함수 
  매개변수로 전달되는 함수는 콜백 함수(Callback function)
  대표 배열 조작 메서드
  임의 정렬: Array.sort(callback function)
  반복 작업: Array.forEach()
  콜백함수 결과 배열 반환: Array.map()
  조건 만족하는 하나의 값 반환: Array.find()
  조건 만족하는 값 배열로 반환: Array.filter()
  누적 결과 값 반환: Array.reduce() 
*/


// sort()문제와 한계점 
// 문제점 일의 자리 4가 10의 자리보다 뒤쪽에 정렬 
// 원인: sort 메서드로 정렬될 때 배열의 요소가 일시적으로 문자열로 변경되어 발생 

let nums = [1, -1, 4, 0, 2, 3, 10, 20, 12];

console.log(nums.sort());
// output = [ -1, 0, 1, 10, 12, 2, 20, 3, 4]
console.log(nums.reverse());
//output = [ -1, 0, 1, 10, 12, 2, 20, 3, 4]

// 한계점: 대소문자 구분없이 정렬하고 싶지만, 대소문자 구분되어 정렬 
let fruits = ["apple", "Orange", "orange", "melon"];

console.log(fruits.sort());
// output: [ 'Orange', 'apple', 'melon', 'orange' ]
console.log(fruits.reverse());
// output: [ 'orange', 'melon', 'apple', 'Orange' ]


//해결방안 값을 비교해줄 수 있는 함수를 집어 넣어주면 문자열이 아닌 숫자를 비교하게됨
let ascending_order = function (x, y) {
  return x - y;
};

let descending_order = function (x, y) {
  return y - x; 
};

console.log(nums.sort(ascending_order));
console.log(nums.sort(descending_order));

// sort() 고차 함수 - (2)

let ascending_order_2 = function (x, y) {
    x = x.toUpperCase();
    y = y.toUpperCase();
  
    if (x > y) return 1;
    else if (y > x) return -1;
    else return 0; 
};

let descending_order_2 = function (x, y) {
  x = x.toUpperCase();
  y = y.toUpperCase();

  if (x < y) return 1;
  else if (y < x) return -1;
  else return 0; 
};

let fruits_for_sort = ["apple", "Orange", "orange", "melon"];
console.log(fruits_for_sort.sort(ascending_order_2))
// output: [ 'apple', 'melon', 'Orange', 'orange' ]
console.log(fruits_for_sort.sort(descending_order_2))
// output: [ 'Orange', 'orange', 'melon', 'apple' ]


// sort() 고차 함수 - (3)

let ascending_order_3 = function (x, y) {
  if (typeof x === "string") x = x.toUpperCase();
  if (typeof y === "string") y = y.toUpperCase();

  return x > y ? 1 : -1;
};

let descending_order_3 = function (x, y) {
  if (typeof x === "string") x = x.toUpperCase();
  if (typeof y === "string") y = y.toUpperCase();

  return x < y ? 1 : -1;
};

let nums_3 = [1, -1, 4, 0, 10, 20, 12];
console.log(nums.sort(ascending_order_3)); // output: [-1,  0,  1,  2, 3, 4, 10, 12, 20]
console.log(nums.sort(descending_order_3)); // output: [  20, 12, 10,  4, 3, 2,  1,  0, -1]

let fruits_3 = ["apple", "Orange", "orange", "melon"]
console.log(fruits_3.sort(ascending_order_3)); // output: [ 'apple', 'melon', 'orange', 'Orange' ]
console.log(fruits_3.sort(descending_order_3)); // output: [ 'Orange', 'orange', 'melon', 'apple' ]
